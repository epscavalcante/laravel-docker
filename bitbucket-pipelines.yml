image: php:8.1.18-fpm-alpine3.18

definitions:
  services:
    mysql:
      image: mysql:8.0.33
      environment:
        MYSQL_DATABASE: 'app'
        MYSQL_ROOT_PASSWORD: 'root'
        memory: '256'
  steps:
    - step: &build
        name: 'Build'
        script:
          - apk add openssl
          - apt-get update && apt-get install -y unzip
          - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
          - composer -V
          - php -r "file_exists('.env') || copy('.env.example', '.env');"
          - composer install
          - php artisan key:generate
        artifacts:
          - "**"
        caches:
          - composer

    - step: &test-memory
        name: 'Test with SQLite'
        services: 
          - docker
        caches:
          - composer
        script:
          - php artisan test
    
    - step: &test-database
        name: 'Test with MySql'
        services: 
          - docker
          - mysql
        caches:
          - composer
        script:
          - docker-php-ext-install pdo pdo_mysql
          - php artisan test

    - step: &lint
        name: 'Lint'
        script:
          - ./vendor/bin/pint --test

    - step: &build-image
        name: Build image
        script:
          - export DOCKER_BUILDKIT=1
          - echo $BITBUCKET_REPO_SLUG
          - IMAGE_NAME=$DOCKER_HUB_USER/$BITBUCKET_REPO_SLUG
          - docker build . -t $IMAGE_NAME -f ./.docker/php/Dockerfile.prod
          - docker save $IMAGE_NAME --output "${BITBUCKET_REPO_SLUG}.tar"
        services:
          - docker
        caches:
          - docker
        artifacts:
          - "*.tar"

    - step: &push-image
        name: Push image to AWS ECR
        script:
          - IMAGE_NAME=$DOCKER_HUB_USER/$BITBUCKET_REPO_SLUG
          - docker load --input "${BITBUCKET_REPO_SLUG}.tar"
          - docker tag $IMAGE_NAME $IMAGE_NAME:latest
          - docker tag $IMAGE_NAME $IMAGE_NAME:$BITBUCKET_COMMIT
          - pipe: atlassian/aws-ecr-push-image:2.0.0
            variables:
              AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
              AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
              AWS_DEFAULT_REGION: us-east-1
              IMAGE_NAME: $IMAGE_NAME
              TAGS: "latest $BITBUCKET_COMMIT"
        cache:
          - docker

pipelines:
  default:
    - step: *build-image
    - step: *push-image-ecr

  pull-requests:
    '**':
      - step: *build
      - parallel:
          fails-fast: true
          steps:
            - step: *lint
            - step: *test-memory
  branches: 
    main:
      - step: *build
      - parallel:
          fails-fast: true
          steps:
            - step: *test-database
      - step: *build-image
      - step: *push-image